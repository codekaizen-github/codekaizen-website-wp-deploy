all:
  vars:
    ansible_user: ansible
    build_number: "{{ ansible_date_time.iso8601_micro | to_uuid }}"
    required_docker_label: "org.codekaizen.application=codekaizen-website-wordpress"
    nginx_reverse_proxy_network_name: "nginx_proxy_network"
    MYSQL_ROOT_PASSWORD: "{{ lookup('env', 'MYSQL_ROOT_PASSWORD') }}"
    WORDPRESS_DB_NAME: "{{ lookup('env', 'WORDPRESS_DB_NAME') }}"
    WORDPRESS_DB_USER: "{{ lookup('env', 'WORDPRESS_DB_USER') }}"
    WORDPRESS_DB_PASSWORD: "{{ lookup('env', 'WORDPRESS_DB_PASSWORD') }}"
    WORDPRESS_CONFIG_ADMIN_PASSWORD: "{{ lookup('env', 'WORDPRESS_CONFIG_ADMIN_PASSWORD') }}"
    WORDPRESS_CONFIG_ADMIN_USER: "{{ lookup('env', 'WORDPRESS_CONFIG_ADMIN_USER') }}"
    WORDPRESS_CONFIG_ADMIN_EMAIL: "{{ lookup('env', 'WORDPRESS_CONFIG_ADMIN_EMAIL') }}"
    NEXTAPP_REVALIDATE_SECRET: "{{ lookup('env', 'NEXTAPP_REVALIDATE_SECRET') }}"
  hosts:
    # cdeed53d37a742f08a227faafc832595:
    #   ansible_host: 192.168.0.20
    # 9c9b38653dae4f4ebbd120adba40ac33:
    #   ansible_host: 192.168.0.28
    ad42e8b2fa7d4a3dbc5aecef7810a624:
      ansible_host: 192.168.0.21
      docker_networks:
        - name: "codekaizen_website_wordpress"
          driver: bridge
      docker_volumes:
        - name: "codekaizen_website_wordpress_db_data"
          driver: local
      docker_containers:
        - name: "codekaizen-website-wordpress-db"
          image: "mysql/mysql-server:8.0"
          state: "started"
          volumes:
            - "codekaizen_website_wordpress_db_data:/var/lib/mysql"
          networks:
            - name: "codekaizen_website_wordpress"
              aliases:
                - "db"
          env:
            MYSQL_DATABASE: "{{ WORDPRESS_DB_NAME }}"
            MYSQL_USER: "{{ WORDPRESS_DB_USER }}"
            MYSQL_PASSWORD: "{{ WORDPRESS_DB_PASSWORD }}"
            MYSQL_ROOT_PASSWORD: "{{ MYSQL_ROOT_PASSWORD }}"
          labels:
            org.codekaizen.application: "codekaizen-website-wordpress"
            org.codekaizen.service: "db"
            # org.codekaizen.build_number: "{{ build_number }}" # will force a recreate
          restart_policy: always
          replica_count: 1
          filters_string: '--filter "label=org.codekaizen.application=codekaizen-website-wordpress" --filter "label=org.codekaizen.service=db"'
          deploy_strategy: "recreate"
          comparisons:
            "*": ignore # by default, ignore *all* options (including image)
            image: strict
            networks: strict
            volumes: strict
            env: strict # except for environment variables; there, we want to be strict
            restart_policy: strict
            labels: strict # will force a recreate

        - name: "codekaizen-website-wordpress-phpmyadmin"
          image: "phpmyadmin/phpmyadmin"
          state: "started"
          depends_on:
            - "codekaizen-website-wordpress-db"
          networks:
            - name: "codekaizen_website_wordpress"
            - name: "{{ nginx_reverse_proxy_network_name }}"
              aliases:
                - phpmyadmin.codekaizen.net
          env:
            PMA_HOST: "db"
            PMA_PORT: "3306"
            PMA_USER: "{{ WORDPRESS_DB_USER }}"
            PMA_PASSWORD: "{{ WORDPRESS_DB_PASSWORD }}"
          labels:
            org.codekaizen.application: "codekaizen-website-wordpress"
            org.codekaizen.service: "phpmyadmin"
            # org.codekaizen.build_number: "{{ build_number }}"
          restart_policy: always
          replica_count: 1
          filters_string: '--filter "label=org.codekaizen.application=codekaizen-website-wordpress" --filter "label=org.codekaizen.service=phpmyadmin"'
          deploy_strategy: "recreate"

        - name: "codekaizen-website-wordpress-wp"
          image: "ghcr.io/codekaizen-github/codekaizen-website-wp:latest"
          pull: true
          state: "started"
          depends_on:
            - "codekaizen-website-wordpress-db"
          networks:
            - name: "codekaizen_website_wordpress"
            - name: "{{ nginx_reverse_proxy_network_name }}"
              aliases:
                - wp.codekaizen.net
          env:
            WORDPRESS_HOST_PORT: "80"
            WORDPRESS_DB_NAME: "{{ WORDPRESS_DB_NAME }}"
            WORDPRESS_DB_USER: "{{ WORDPRESS_DB_USER }}"
            WORDPRESS_DB_PASSWORD: "{{ WORDPRESS_DB_PASSWORD }}"
            WORDPRESS_DB_HOST: db:3306
            WORDPRESS_TABLE_PREFIX: sdg_
            WORDPRESS_HOST_NAME: wp.codekaizen.net
            WORDPRESS_CONFIG_WP_HOME: https://wp.codekaizen.net
            WORDPRESS_CONFIG_WP_SITEURL: https://wp.codekaizen.net
            WORDPRESS_CONFIG_EXTRA: define('WP_HOME',getenv_docker('WORDPRESS_CONFIG_WP_HOME','https://wp.codekaizen.net')); define('WP_SITEURL',getenv_docker('WORDPRESS_CONFIG_WP_SITEURL','https://wp.codekaizen.net')); define( 'FS_METHOD', 'direct'); define( 'DISABLE_WP_CRON', true ); define( 'WP_DEBUG_LOG', true); define( 'WP_DEBUG_DISPLAY', false);
            WORDPRESS_DEBUG: "true"
            NEXTAPP_BASE_API_URL: https://codekaizen.net/api
            NEXTAPP_REVALIDATE_SECRET: "{{ NEXTAPP_REVALIDATE_SECRET }}"
          labels:
            org.codekaizen.application: "codekaizen-website-wordpress"
            org.codekaizen.service: "wp"
            org.codekaizen.build_number: "{{ build_number }}"
          restart_policy: "always"
          replica_count: 2
          filters_string: '--filter "label=org.codekaizen.application=codekaizen-website-wordpress" --filter "label=org.codekaizen.service=wp"'
          deploy_strategy: "blue_green"
